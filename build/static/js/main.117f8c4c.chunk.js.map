{"version":3,"sources":["components/GameData/Table/RaceSection/RaceInformationRow/index.js","components/GameData/Table/RaceSection/StartRow/ExpandableContent/index.js","components/GameData/Table/RaceSection/StartRow/BaseRow/index.js","components/GameData/Table/RaceSection/StartRow/index.js","components/GameData/Table/RaceSection/index.js","components/GameData/Table/index.js","components/Spinner/index.js","components/GameData/index.js","components/InputContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["RaceInformationRow","race","date","DateTime","fromISO","startTime","toFormat","className","styles","raceInformation","number","name","PosedRow","posed","span","enter","x","opacity","exit","ExpandableContent","horse","trainer","expandableContent","firstName","lastName","pedigree","father","BaseRow","start","baseRow","driver","PosedContainer","div","height","staggerChildren","delayChildren","transition","duration","delay","StartRow","onClick","isExpanded","cx","startRow","expanded","pose","withParent","RaceSection","useState","expandedStartNumbers","setExpandedStartNumbers","handleRowClick","startNumber","includes","filter","raceSection","headerRow","starts","map","Table","data","table","races","id","Spinner","spinnerContainer","icon","spinner","y","GameData","gameType","isLoading","type","emptyState","Fragment","searchResult","InputContainer","onChange","inputContainer","inputWrapper","label","placeholder","gameTypeInput","AVAILABLE_GAME_TYPES","App","setGameType","gameData","setGameData","setIsLoading","fetchAndUpdateGameData","fetchUrl","fetch","then","res","json","sortByStartTime","a","b","Date","appContainer","e","value","target","toUpperCase","upcoming","length","game","sort","results","handleSetGameData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.117f8c4c.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport { DateTime } from \"luxon\"\r\n\r\nfunction RaceInformationRow({ race }) {\r\n  const date = DateTime.fromISO(race.startTime).toFormat(\"yyyy-MM-dd H:mm\")\r\n\r\n  return (\r\n    <div className={styles.raceInformation}>\r\n      <span>#{race.number}</span>\r\n      <span>{race.name ? race.name : \"No name available\"}</span>\r\n      <span>{date}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RaceInformationRow\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport posed from \"react-pose\"\r\n\r\nconst PosedRow = posed.span({\r\n  enter: { x: 0, opacity: 1 },\r\n  exit: { x: 10, opacity: 0 },\r\n})\r\n\r\nfunction ExpandableContent({ horse }) {\r\n  const trainer = horse.trainer\r\n\r\n  return (\r\n    <div className={styles.expandableContent}>\r\n      <PosedRow>\r\n        <b>Trainer:</b> {trainer.firstName} {trainer.lastName}\r\n      </PosedRow>\r\n      <PosedRow>\r\n        <b>Father's name:</b> {horse.pedigree.father.name}\r\n      </PosedRow>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpandableContent\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\n\r\nfunction BaseRow({ start }) {\r\n  return (\r\n    <div className={styles.baseRow}>\r\n      <span>#{start.number}</span>\r\n      <span>{start.horse.name}</span>\r\n      <span>\r\n        {start.driver.firstName} {start.driver.lastName}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BaseRow\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport ExpandableContent from \"./ExpandableContent\"\r\nimport cx from \"classnames\"\r\nimport BaseRow from \"./BaseRow\"\r\nimport posed from \"react-pose\"\r\n\r\nconst PosedContainer = posed.div({\r\n  enter: {\r\n    height: \"auto\",\r\n    staggerChildren: 50,\r\n    delayChildren: 100,\r\n    transition: { duration: 150 },\r\n  },\r\n  exit: {\r\n    height: 0,\r\n    delay: 150,\r\n    staggerChildren: 50,\r\n    transition: { duration: 150 },\r\n  },\r\n})\r\n\r\nfunction StartRow({ start, onClick, isExpanded }) {\r\n  return (\r\n    <div\r\n      onClick={() => onClick(start.number)}\r\n      className={cx(styles.startRow, { [styles.expanded]: isExpanded })}\r\n    >\r\n      <BaseRow start={start} />\r\n      <PosedContainer\r\n        pose={isExpanded ? \"enter\" : \"exit\"}\r\n        withParent={false}\r\n        className={styles.posed}\r\n      >\r\n        <ExpandableContent horse={start.horse} />\r\n      </PosedContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StartRow\r\n","import React, { useState } from \"react\"\r\nimport styles from \"./style.css\"\r\nimport RaceInformationRow from \"./RaceInformationRow\"\r\nimport StartRow from \"./StartRow\"\r\n\r\nfunction RaceSection({ race }) {\r\n  const [expandedStartNumbers, setExpandedStartNumbers] = useState([])\r\n\r\n  const handleRowClick = startNumber => {\r\n    if (expandedStartNumbers.includes(startNumber))\r\n      setExpandedStartNumbers(\r\n        expandedStartNumbers.filter(number => number !== startNumber)\r\n      )\r\n    else setExpandedStartNumbers([...expandedStartNumbers, startNumber])\r\n  }\r\n\r\n  return (\r\n    <div className={styles.raceSection}>\r\n      <RaceInformationRow race={race} />\r\n      <div className={styles.headerRow}>\r\n        <span>Start number</span>\r\n        <span>Horse</span>\r\n        <span>Driver</span>\r\n      </div>\r\n      {race.starts.map(start => (\r\n        <StartRow\r\n          key={start.number}\r\n          start={start}\r\n          onClick={handleRowClick}\r\n          isExpanded={expandedStartNumbers.includes(start.number)}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RaceSection\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport RaceSection from \"./RaceSection\"\r\n\r\nfunction Table({ data }) {\r\n  return (\r\n    <div className={styles.table}>\r\n      {data.races.map(race => (\r\n        <RaceSection key={race.id} race={race} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className={styles.spinnerContainer}>\r\n      <FontAwesomeIcon icon=\"spinner\" className={styles.spinner} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from \"react\"\r\nimport styles from \"./style.css\"\r\nimport Table from \"./Table\"\r\nimport Spinner from \"../Spinner\"\r\nimport posed, { PoseGroup } from \"react-pose\"\r\n\r\nconst PosedContainer = posed.div({\r\n    enter : { y:0, opacity:1 },\r\n    exit: { y:-50, opacity:0 },\r\n})\r\n\r\nfunction GameData({data, gameType, isLoading}) {\r\n    return(\r\n        <section className=\"{style.Container}\">\r\n            <PoseGroup>\r\n                {data && (\r\n                    <PosedContainer key=\"content\">\r\n                        {data.type === \"nodata\" ? (\r\n                            <h2 className={styles.emptyState}>\r\n                                There are no upcoming games or latest results to show.\r\n                            </h2>\r\n                        ):(\r\n                        <React.Fragment>\r\n                            <h2 className={styles.searchResult}>\r\n                                Showing closest {data.type} game for {gameType}\r\n                            </h2>\r\n                            <Table data={data} />\r\n                        </React.Fragment>\r\n                        )}\r\n                    </PosedContainer>\r\n                )}\r\n            </PoseGroup>\r\n            {isLoading && <Spinner />}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default GameData","import React from \"react\"\r\n\r\nimport styles from './style.css'\r\n\r\nfunction InputContainer ({onChange}) {\r\n    return(\r\n        <section className={styles.inputContainer}>\r\n            <div className={styles.inputWrapper}>\r\n                <div className={styles.label}>\r\n                    <h3>Enter Game Type</h3> <span>(V75, V65, V64 or V4)</span>\r\n                </div>\r\n                <input \r\n                    onChange={onChange}\r\n                    placeholder=\"Game Type...\"\r\n                    className={styles.gameTypeInput}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InputContainer\r\n\r\n","import React, {useState} from 'react'\nimport styles from \"./App.css\"\nimport GameData from \"./components/GameData\"\nimport InputContainer from \"./components/InputContainer\"\n\n\nconst AVAILABLE_GAME_TYPES = [\"V75\", \"V65\", \"V64\", \"V4\"]\n\nfunction App() {\n\n  const [gameType, setGameType] = useState(\"\");\n  const [gameData, setGameData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchAndUpdateGameData = (id,type) => {\n    const fetchUrl = `https://www.atg.se/services/racinginfo/v1/api/games/${id}`\n    \n    fetch(fetchUrl).then(res => \n      res.json().then(data => {\n        setIsLoading(false)\n        setGameData({...data,type})\n      })\n    )\n  }\n\n  const sortByStartTime = (a,b) => new Date(b.startTime) - new Date(a.startTime)\n\n  const handleSetGameData = data => {\n    if(data.upcoming.length){\n      const game = data.upcoming.sort(sortByStartTime)[0]\n      return fetchAndUpdateGameData(game.id,\"upcoming\") \n    }\n    else if(data.results.length){\n      const game = data.results.sort(sortByStartTime)[0]\n      return fetchAndUpdateGameData(game.id,\"result\")\n    }\n    setGameData({type: \"nodata\"})\n  }\n\n  const handleChange = e => {\n    const value = e.target.value.toUpperCase()\n    setGameType(value)\n\n    if(AVAILABLE_GAME_TYPES.includes(value)){\n      setIsLoading(true)\n      const fetchUrl = `https://www.atg.se/services/racinginfo/v1/api/products/${value}`\n\n      return fetch(fetchUrl).then(res => \n          res.json().then(data => handleSetGameData(data))\n        )\n    }\n    setGameData(null);\n  }\n\n  return (\n    <main className = {styles.appContainer}>\n      <InputContainer onChange = {handleChange} />\n      <GameData gameType={gameType} data={gameData} isLoading={isLoading} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}